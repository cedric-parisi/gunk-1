package accounts

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

// Account holds all details about a bank account.
type Account struct {
	// AccountID is the unique identifier of an account.
	AccountID string `pb:"1" json:"account_id"`
	// FirstName is the firstname of the account owner.
	FirstName string `pb:"2" json:"first_name"`
}

// GetAccountRequest is the request envelope to get an account by its identifier.
type GetAccountRequest struct {
	AccountID string `pb:"1" json:"account_id"`
}

// GetAccountsRequest is the request envelope to get a list of filtered accounts.
type GetAccountsRequest struct {
	// NextStartingIndex is a cursor for pagination. It's an AccountID that defines
	// the current place in the total list of Accounts.
	NextStartingIndex string `pb:"1" json:"next_starting_index"`
}

// GetAccountsResponse wraps the list of accounts.
type GetAccountsResponse struct {
	// Result is a list containing up to 20 Accounts.
	Result []Account `pb:"1" json:"result"`
	// HasMore indicates if there are more accounts available.
	HasMore bool `pb:"2" json:"has_more"`
}

// CreateAccountRequest wraps all required fields for an account creation.
type CreateAccountRequest struct {
	// FirstName is the firstname of the account owner.
	FirstName string `pb:"1" json:"first_name"`
}

// CreateAccountResponse is the response envelope for an account creation.
type CreateAccountResponse struct {
	// AccountID is the unique identifier of the newly created account.
	AccountID string `pb:"1" json:"account_id"`
}

// UpdateAccountRequest wraps all fields available for update.
type UpdateAccountRequest struct {
	// AccountID is the unique identifier of the account to update.
	AccountID string `pb:"1" json:"account_id"`
	// FirstName is the firstname of the account owner.
	FirstName string `pb:"2" json:"first_name"`
}

// DeleteAccountRequest is the request envelope to delete an account.
type DeleteAccountRequest struct {
	// AccountID is the unique identifier of the account to delete.
	AccountID string `pb:"1" json:"account_id"`
}

// AccountService provides Account operations.
type AccountService interface {
	// GetAccount retrieves the detail of an account, selected by its id.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/accounts/{AccountID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Retrieves all data from an account, selected by the account_id you supplied.",
	//         Summary:     "Retrieve an account",
	// }
	GetAccount(GetAccountRequest) Account

	// GetAccounts returns a list containing up to 20 accounts.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/accounts",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Returns a list containing up to 20 accounts. You can paginate through account by supplying next_starting_index in your subsequents calls. next_starting_index contains the account_id of the last account_id of the current page.",
	//         Summary:     "List all accounts",
	// }
	GetAccounts(GetAccountsRequest) GetAccountsResponse

	// CreateAccount creates a new account and return its id.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/accounts",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Creates a new account",
	//         Summary:     "Create an account",
	// }
	CreateAccount(CreateAccountRequest) CreateAccountResponse

	// UpdateAccount updates an account.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/accounts/{AccountID}",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Updates an account with all the fields supplied.",
	//         Summary:     "Update an account",
	// }
	UpdateAccount(UpdateAccountRequest)

	// DeleteAccount deletes an account.
	//
	// +gunk http.Match{
	//         Method: "DELETE",
	//         Path:   "/v1/accounts/{AccountID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Permanently delete an account.",
	//         Summary:     "Delete an account",
	// }
	DeleteAccount(DeleteAccountRequest)
}
